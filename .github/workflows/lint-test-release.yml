name: Lint, Test Release

on:
  push:
  pull_request:
    branches:
      - main
      - staging
      - dev
    types:
      - closed
      - opened
      - synchronize
      - ready_for_review

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    - name: Install Dependencies
      run: npm install

    - name: Run Linter
      run: npm run lint

    - name: Run Tests
      run: npm test
  
  create-release:
    if: (github.event_name == 'push' || github.event.pull_request.merged == true) && github.ref == 'refs/heads/main'
    needs: 
      - lint-and-test
    runs-on: ubuntu-latest

    permissions:
      contents: write      # Allows pushing commits and creating tags
      actions: write       # Allows creating releases
      checks: write
      deployments: write
      id-token: write
      issues: write
      discussions: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'  # Choose the node version
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
      
      - name: Set Git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
      - name: Update Version & changelog
        run: npm run release --verbose

      - name: Push changes and tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for release
        run: |
          git push --follow-tags origin main

      - name: Get Latest Tag
        id: latest-tag
        run: echo "latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

      - name: Print Latest Tag
        run: echo "The latest tag is ${{ env.latest_tag }}"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: latest
          prerelease: false
          title: "Release ${{ env.latest_tag }}"

  create-prerelease:
    if: (github.event_name == 'push' || github.event.pull_request.merged == true) && github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: 
      - lint-and-test
    permissions:
        contents: write      # Allows pushing commits and creating tags
        actions: write       # Allows creating releases
        checks: write
        deployments: write
        id-token: write
        issues: write
        discussions: write
        packages: write
        pages: write
        pull-requests: write
        repository-projects: write
        security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'  # Choose the node version
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
      
      - name: Set Git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
      - name: Update Version & changelog
        run: npm run release -- --prerelease alpha

      - name: Push changes and tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for release
        run: |
          git push --follow-tags origin staging

      - name: Get Latest Tag
        id: latest-tag
        run: echo "latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

      - name: Print Latest Tag
        run: echo "The latest tag is ${{ env.latest_tag }}"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: prerelease
          prerelease: true
          title: "Release ${{ env.latest_tag }}"
